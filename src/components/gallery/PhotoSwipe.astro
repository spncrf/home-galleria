---
import { STATIC_SLUG } from "@config/consts";

export interface Props {
  galleryId: string;
  thumbnail: {
    width: number;
    height: number;
  };
  entries: {
    src: string;
    width: number;
    height: number;
    description: string;
    title: string;
    date: string;
    slug: string;
  }[];
}

const { entries, thumbnail, galleryId } = Astro.props;

// TODO: Remove the requirement to add ../node_modules for imports
---

<link rel="stylesheet" href="../node_modules/photoswipe/dist/photoswipe.css" />
<script type="module" define:vars={{ galleryId, STATIC_SLUG }}>
  import PhotoSwipeLightbox from "../node_modules/photoswipe/dist/photoswipe-lightbox.esm.js";

  const lightbox = new PhotoSwipeLightbox({
    gallery: `#${galleryId}`,
    children: "a",
    bgClickAction: "close",

    showHideAnimationType: "fade",
    pswpModule: () =>
      import("../node_modules/photoswipe/dist/photoswipe.esm.js"),
  });

  let captionElement = null;
  let artworkLinkElement = null;

  const updateCaptionText = () => {
    const currSlideElement = lightbox.pswp.currSlide.data.element;

    if (captionElement) {
      // get caption from alt attribute
      const captionText = currSlideElement
        .querySelector("img")
        .getAttribute("alt");

      if (captionText) {
        // figure out where to place it
        const lightboxImageHeight = lightbox.pswp.currSlide.prevDisplayedHeight;
        const bottomSpace = (window.innerHeight - lightboxImageHeight) / 2;
        const distanceFromImage = 30;
        const textHeight = 44;
        const distanceFromBotton = Math.max(
          0,
          bottomSpace - textHeight - distanceFromImage,
        );

        captionElement.style.bottom = `${distanceFromBotton}px`;
        captionElement.innerHTML = `<div class="pswp-text">${captionText}</div>`;
      } else {
        captionElement.innerHTML = "";
      }
    }
  };

  const updateArtworkLink = () => {
    const currSlideElement = lightbox.pswp.currSlide.data.element;

    if (artworkLinkElement) {
      // get slug from data-slug-attribute
      const slug = currSlideElement
        .querySelector("img")
        .getAttribute("data-slug");

      if (slug) {
        const artworkEntryLink = `${STATIC_SLUG.artwork}/${slug}`;
        artworkLinkElement.setAttribute("href", artworkEntryLink);
      }
    }
  };

  lightbox.on("uiRegister", function () {
    lightbox.pswp.ui.registerElement({
      name: "custom-caption",
      isButton: false,
      appendTo: "root",
      html: "Caption text",
      onInit: el => {
        captionElement = el;
        lightbox.pswp.on("change", () => {
          updateCaptionText();
        });
      },
    });

    lightbox.pswp.ui.registerElement({
      name: "artwork-link",
      order: 8,
      isButton: true,
      tagName: "a",
      title: "Artwork Link",
      html: {
        isCustomSVG: true,
        inner:
          '<path d="M7.05025 1.53553C8.03344 0.552348 9.36692 0 10.7574 0C13.6528 0 16 2.34721 16 5.24264C16 6.63308 15.4477 7.96656 14.4645 8.94975L12.4142 11L11 9.58579L13.0503 7.53553C13.6584 6.92742 14 6.10264 14 5.24264C14 3.45178 12.5482 2 10.7574 2C9.89736 2 9.07258 2.34163 8.46447 2.94975L6.41421 5L5 3.58579L7.05025 1.53553Z" fill="currentColor"></path> <path d="M7.53553 13.0503L9.58579 11L11 12.4142L8.94975 14.4645C7.96656 15.4477 6.63308 16 5.24264 16C2.34721 16 0 13.6528 0 10.7574C0 9.36693 0.552347 8.03344 1.53553 7.05025L3.58579 5L5 6.41421L2.94975 8.46447C2.34163 9.07258 2 9.89736 2 10.7574C2 12.5482 3.45178 14 5.24264 14C6.10264 14 6.92742 13.6584 7.53553 13.0503Z" fill="currentColor"></path> <path d="M5.70711 11.7071L11.7071 5.70711L10.2929 4.29289L4.29289 10.2929L5.70711 11.7071Z" fill="currentColor"></path>',
      },
      onInit: el => {
        artworkLinkElement = el;
        artworkLinkElement.setAttribute("target", "__blank");
        lightbox.pswp.on("change", () => {
          updateArtworkLink();
        });
      },
    });
  });

  lightbox.on("imageSizeChange", () => {
    updateCaptionText();
  });

  lightbox.on("close", () => {
    const pswp = lightbox.pswp;
    const yOffset = -100;
    const currentImage = pswp.currSlide.data.element;
    if (currentImage) {
      const y =
        currentImage.getBoundingClientRect().top + window.scrollY + yOffset;
      window.scrollTo({ top: y, behavior: "smooth" });
    }
  });
  lightbox.init();
</script>
<style>
  .gallery-entry {
    padding: 5px;
  }

  .pswp-gallery {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
    row-gap: 1rem;
    flex: 1;
  }

  img {
    object-fit: cover;
    object-position: 50% 50%;
    border-radius: calc(var(--theme-shape-radius) / 2);
    border: 2px solid rgba(0, 0, 0, 0.25);
  }
</style>
<div id={galleryId} class="pswp-gallery">
  {
    entries.map((entry, index) => (
      <a
        href={entry.src}
        data-pswp-width={entry.width}
        data-pswp-height={entry.height}
        target="_blank"
        class="gallery-entry"
      >
        <img
          src={entry.src}
          width={`${thumbnail.width}`}
          height={`${thumbnail.height}`}
          alt={entry.title}
          data-slug={entry.slug}
        />
      </a>
    ))
  }
</div>
