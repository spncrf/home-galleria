---
import { Icon } from "astro-icon/components";

export interface HeaderProps {
  navData: any[];
}
const { navData } = Astro.props as HeaderProps;
---

<script type="module">
  const bodyElement = document.querySelector("body");
  const menuButton = document.querySelector("#menuButton");
  const navHeader = document.querySelector("#navHeader");
  const menuButtonIconHam = document.querySelector("#menuButtonIconHam");
  const menuButtonIconClose = document.querySelector("#menuButtonIconClose");

  menuButton.addEventListener("click", toggleMenu);

  function toggleMenu() {
    menuButtonIconHam.toggleAttribute("hidden");
    menuButtonIconClose.toggleAttribute("hidden");

    if (navHeader.hasAttribute("mobile-menu-open", true)) {
      menuButton.title = "Open Main Menu";
      bodyElement.style.removeProperty("overflow");
      bodyElement.style.removeProperty("position");
    } else {
      menuButton.title = "Close Main Menu";
      bodyElement.style.width = "100%";
    }

    navHeader.toggleAttribute("mobile-menu-open");
  }
</script>

<header id="navHeader" class="sticky-header">
  <div class="header-logo-menu__container">
    <button id="menuButton" title="Open Main Menu">
      <div id="menuButtonIconHam">
        <Icon name="ic:baseline-menu" width={24} height={24} />
      </div>
      <div id="menuButtonIconClose" hidden>
        <Icon name="ic:baseline-close" width={24} height={24} />
      </div>
    </button>
    <a class="header-logo__link" href="/">
      <slot name="logo" />
    </a>
  </div>
  <div class="header-nav_fullContainer">
    <slot name="nav">
      {
        navData && (
          <nav>
            <ul>
              {navData.map(navItem => (
                <li>
                  <a href={navItem.slug}>{navItem.title}</a>
                </li>
              ))}
            </ul>
          </nav>
        )
      }
    </slot>
  </div>
  <div class="header-action-item__container">
    <slot name="action-item" />
  </div>
</header>

<style>
  header {
    width: 100%;
    padding: 1rem 1rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .sticky-header {
    background-color: var(--theme-surface-1);
    position: sticky;
    top: 0;
    z-index: 100000;
  }
  header {
    display: grid;
    grid-template-columns: 1fr auto auto auto;
  }
  .header-logo__link {
    width: fit-content;
    color: inherit;
    text-decoration: none;
  }
  .header-logo-menu__container {
    display: flex;
    align-items: center;
    z-index: 100;
  }
  .header-action-item__container {
    z-index: 100;
    padding-left: 0.8rem;
  }
  #menuButton {
    outline: none;
    border: none;
    background-color: transparent;
    margin-top: 0.4rem;
    margin-right: 0.5rem;
    -items: center;
    display: none;
    cursor: pointer;
    -webkit-tap-highlight-color: transparent;
  }
  #menuButton > span {
    color: var(--theme-on-bg);
    vertical-align: middle;
  }
  nav {
    display: flex;
  }
  nav ul {
    margin: 0;
    padding: 0;
    list-style: none;
    display: flex;
  }
  nav ul li a {
    text-decoration: none;
    margin-right: 1rem;
    color: inherit;
    opacity: 0.72;
    transition: opacity linear 150ms;
  }
  nav ul li a:hover {
    opacity: 1;
  }
  @media (max-width: 910px) {
    #menuButton {
      display: flex;
      z-index: 100;
    }
    .header-nav_fullContainer {
      width: 100%;
      height: 100%;
      background-color: var(--theme-surface-1);
      display: none;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      position: fixed;
      inset: 0;
      z-index: 99;
    }
    header[mobile-menu-open] .header-nav_fullContainer {
      display: flex;
    }
    header[mobile-menu-open] nav ul {
      align-items: center;
      flex-direction: column;
    }
    header[mobile-menu-open] nav ul li {
      font-size: var(--font-size-lg);
      margin-bottom: 1rem;
    }
  }
</style>
